name: Testar aplicação

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]


permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        os: [ubuntu-latest, windows-latest]
  
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3

    - name: Install poetry
      run: pipx install poetry

    - name: create empty env
      run: |
        ls
        pwd
        poetry new example
        cd example
        poetry add requests

    - name: Set up Python ${{ matrix.python-version }} with cache
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'poetry'

    - name: install packages
      run: poetry install
    
    - name: Tests
      run: |
        poetry run task test

    - name: Archive code coverage results
      uses: actions/upload-artifact@v3
      with:
        name: coverage
        path: './htmlcov'
